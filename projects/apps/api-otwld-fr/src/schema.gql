# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Client {
  _id: String!
  createdAt: DateTime!
  name: String!
  updatedAt: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EventsOrderBy {
  direction: eDirection
  field: eListProjectsInputSortFields
}

input GetResourceUrlInputDto {
  size: ResourceSizes!
}

input ListMediasFilter {
  memberId: String
}

type ListMediasPage {
  edges: [PaginatedMediaPageEdge]!
  pageInfo: PageInfo
  totalCount: Int!
}

type ListMemberPage {
  edges: [PaginatedMemberPageEdge]!
  pageInfo: PageInfo
  totalCount: Int!
}

input ListProjectsFilter {
  memberId: String
}

type ListProjectsPage {
  edges: [PaginatedProjectPageEdge]!
  pageInfo: PageInfo
  totalCount: Int!
}

type ListServicePage {
  edges: [PaginatedServicePageEdge]!
  pageInfo: PageInfo
  totalCount: Int!
}

type Location {
  city: String!
  country: String!
  fullLocation: String!
  street: String
}

type Media {
  _id: String!
  author: String!
  createdAt: DateTime!
  image: Resource
  link: String!
  logo: Resource
  title: String!
  type: String!
  updatedAt: String!
}

input MediasOrderBy {
  direction: eDirection
  field: eListMediasInputSortFields
}

type Member {
  _id: String!
  createdAt: DateTime!
  firstName: String!
  jobTitle: String!
  lastName: String!
  location: Location
  medias(criteria: ListMediasFilter, order: MediasOrderBy, pagination: PaginationOption!): ListMediasPage!
  picture: Resource
  projects(criteria: ListProjectsFilter, order: EventsOrderBy, pagination: PaginationOption!): ListProjectsPage!
  services: [Service!]!
  skills: [MemberSkill!]!
  slug: String!
  socials: [MemberSocial!]!
  testimonials: [Testimonial!]!
  updatedAt: String!
  workModes: [MemberWorkMode!]!
}

input MemberOrderBy {
  direction: eDirection
  field: eListMembersInputSortFields
}

type MemberSkill {
  level: Float!
  skill: Skill!
  startDate: DateTime!
  yearOfExperience: String!
}

type MemberSocial {
  icon: String!
  link: String!
  serviceName: String!
}

type MemberWorkMode {
  description: String!
  workMode: WorkMode!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean
  hasPrevPage: Boolean
  startCursor: String
}

type PaginatedMediaPageEdge {
  cursor: String
  node: Media
}

type PaginatedMemberPageEdge {
  cursor: String
  node: Member
}

type PaginatedProjectPageEdge {
  cursor: String
  node: Project
}

type PaginatedServicePageEdge {
  cursor: String
  node: Service
}

input PaginationOption {
  after: Int
  before: Int
  cursor: String
}

type Project {
  _id: String!
  clients: [Client!]!
  createdAt: DateTime!
  endDate: DateTime
  endDateLabel: String
  image: Resource!
  members: [Member!]!
  services: [Service!]!
  skills: [Skill!]!
  slug: String!
  startDate: DateTime!
  startDateLabel: String!
  template: String!
  testimonials: [Testimonial!]!
  title: String!
  updatedAt: String!
}

type Query {
  getMemberById(id: String!): Member!
  getMemberBySlug(slug: String!): Member!
  getMembers(order: MemberOrderBy, pagination: PaginationOption!): ListMemberPage!
  getProjectBySlug(slug: String!): Project!
  getServicesPaginated(order: ServiceOrderBy, pagination: PaginationOption!): ListServicePage!
}

type Resource {
  name: String!
  originalName: String!
  url(options: GetResourceUrlInputDto!): String!
}

enum ResourceSizes {
  MEDIUM
  ORIGINAL
  SMALL
}

type Service {
  _id: String!
  content: String!
  createdAt: DateTime!
  description: String!
  icon: String!
  slug: String!
  title: String!
  updatedAt: String!
}

input ServiceOrderBy {
  direction: eDirection
  field: eListServicesInputSortFields
}

type Skill {
  _id: String!
  createdAt: DateTime!
  name: String!
  updatedAt: String!
}

type Testimonial {
  _id: String!
  author: TestimonialAuthor!
  content: String!
  createdAt: DateTime!
  members: [Member!]!
  project: Project!
  updatedAt: String!
}

type TestimonialAuthor {
  firstName: String!
  image: Resource!
  job: String!
  lastName: String!
}

type WorkMode {
  _id: String!
  createdAt: DateTime!
  description: String!
  name: String!
  updatedAt: String!
}

enum eDirection {
  ASC
  DESC
}

enum eListMediasInputSortFields {
  createdAt
}

enum eListMembersInputSortFields {
  firstName
}

enum eListProjectsInputSortFields {
  createdAt
}

enum eListServicesInputSortFields {
  firstName
}